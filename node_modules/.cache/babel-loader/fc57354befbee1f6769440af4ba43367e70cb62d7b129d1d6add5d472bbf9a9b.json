{"ast":null,"code":"var _jsxFileName = \"/Users/anmol/Downloads/tinytype/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Grid from './Grid';\nimport './App.css'; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [lastTap, setLastTap] = useState(null);\n  const [tapTimeoutId, setTapTimeoutId] = useState(null);\n  const tapDelay = 1000;\n  const handleKeyTap = key => {\n    const currentTime = new Date().getTime();\n    // console.log(currentTime, lastTap);\n\n    const handleSingleTap = () => {\n      if (key.type === 'function') {\n        switch (key.action) {\n          case 'delete':\n            setInputValue(prevValue => prevValue.slice(0, -1));\n            break;\n          case 'caps':\n            // Logic for caps lock goes here\n            break;\n          case 'space':\n            setInputValue(prevValue => prevValue + ' ');\n            break;\n          // case 'link':\n          //   // Logic to change keyboard or render new screen goes here\n          //   break;\n          default:\n            break;\n        }\n      } else {\n        setInputValue(prevValue => prevValue + key.top);\n      }\n    };\n    const handleDoubleTap = () => {\n      if (key.type === 'function') {\n        if (key.action === 'link') {\n          // change keyboard, render new screen\n        }\n      } else {\n        if (key.bottom) {\n          setInputValue(prevValue => prevValue + key.bottom.split(' ')[0]); // Take the first character if there are two\n        }\n      }\n    };\n\n    // const handleTripleTap = () => {\n    //   if (key.bottom && length(key.bottom) === 3) {\n    //     setInputValue((prevValue) => prevValue + key.bottom.split(' ')[1]);\n    //   }\n    // };\n    if (lastTap && currentTime - lastTap < tapDelay) {\n      // Double tap detected\n      clearTimeout(tapTimeoutId); // Clear the single tap timeout\n      handleDoubleTap();\n    } else {\n      // Set a timeout to handle a single tap\n      const timeoutId = setTimeout(() => {\n        handleSingleTap();\n      }, tapDelay);\n      setTapTimeoutId(timeoutId); // Save the timeout ID so it can be cleared on a double tap\n    }\n    setLastTap(currentTime); // Update the last tap time\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"TinyType\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textInput\",\n        placeholder: \"Type here...\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gridContainer\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        onKeyTap: handleKeyTap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"rulesHeading\",\n        children: \"Rules \\u2193\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"rules\",\n        children: \"Top letter: Single Tap | Bottom/Bottom Left: Double Tap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"rules\",\n        children: \"Bottom Right: Triple Tap | Hold for character repeat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0KyJ+ZVItOGaTWiv/rSkDi08u14=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Grid","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","lastTap","setLastTap","tapTimeoutId","setTapTimeoutId","tapDelay","handleKeyTap","key","currentTime","Date","getTime","handleSingleTap","type","action","prevValue","slice","top","handleDoubleTap","bottom","split","clearTimeout","timeoutId","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onKeyTap","_c","$RefreshReg$"],"sources":["/Users/anmol/Downloads/tinytype/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Grid from './Grid';\nimport './App.css'; // Import the CSS for styling\n\nconst App = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [lastTap, setLastTap] = useState(null);\n  const [tapTimeoutId, setTapTimeoutId] = useState(null);\n\n  const tapDelay = 1000;\n\n  const handleKeyTap = (key) => {\n    const currentTime = new Date().getTime();\n    // console.log(currentTime, lastTap);\n\n    const handleSingleTap = () => {\n      if (key.type === 'function') {\n        switch (key.action) {\n          case 'delete':\n            setInputValue((prevValue) => prevValue.slice(0, -1));\n            break;\n          case 'caps':\n            // Logic for caps lock goes here\n            break;\n          case 'space':\n            setInputValue((prevValue) => prevValue + ' ');\n            break;\n          // case 'link':\n          //   // Logic to change keyboard or render new screen goes here\n          //   break;\n          default:\n            break;\n        }\n      } else {\n        setInputValue((prevValue) => prevValue + key.top);\n      }\n    };\n    const handleDoubleTap = () => {\n      if (key.type === 'function') {\n        if (key.action === 'link') {\n          // change keyboard, render new screen\n        }\n      } else {\n        if (key.bottom) {\n          setInputValue((prevValue) => prevValue + key.bottom.split(' ')[0]); // Take the first character if there are two\n        }\n      }\n    };\n\n    // const handleTripleTap = () => {\n    //   if (key.bottom && length(key.bottom) === 3) {\n    //     setInputValue((prevValue) => prevValue + key.bottom.split(' ')[1]);\n    //   }\n    // };\n    if (lastTap && currentTime - lastTap < tapDelay) {\n      // Double tap detected\n      clearTimeout(tapTimeoutId); // Clear the single tap timeout\n      handleDoubleTap();\n    } else {\n      // Set a timeout to handle a single tap\n      const timeoutId = setTimeout(() => {\n        handleSingleTap();\n      }, tapDelay);\n      setTapTimeoutId(timeoutId); // Save the timeout ID so it can be cleared on a double tap\n    }\n\n    setLastTap(currentTime); // Update the last tap time\n  };\n  return (\n    <div className='container'>\n      <div>\n        <h1 className='title'>TinyType</h1>\n      </div>\n      <div className='inputContainer'>\n        <textarea\n          className='textInput'\n          placeholder='Type here...'\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n      </div>\n      <div className='gridContainer'>\n        <Grid onKeyTap={handleKeyTap} />\n      </div>\n      <div>\n        <h3 className='rulesHeading'>Rules â†“</h3>\n        <h6 className='rules'>\n          Top letter: Single Tap | Bottom/Bottom Left: Double Tap\n        </h6>\n        <h6 className='rules'>\n          Bottom Right: Triple Tap | Hold for character repeat\n        </h6>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}